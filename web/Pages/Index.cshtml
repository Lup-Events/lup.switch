@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<div class="page-header">
    <h1 id="title"></h1>
</div>

<form id="form" autocomplete="off">
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-default" type="button" title="Scan QR with camera" id="qr-reader">
                    <i class="bi bi-upc-scan"></i>
                </button>
            </span>
            <input type="text" class="form-control" placeholder="enter device serial" id="serial"><!--DMPW97XBJF8J  F4GWK8RZJC6J -->
            <span class="input-group-btn">
                <button class="btn btn-primary" type="submit">
                    <i class="bi bi-play"></i>
                </button>
            </span>
        </div>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th scope="col" width="50">Serial</th>
        <th scope="col">Status</th>
    </tr>
    </thead>
    <tbody id="output">
    </tbody>
</table>

<script>
let targetStatus = "";

$("#serial").focus(function() {
    var $this = $(this);
    $this.select();

    // Work around Chrome's little problem
    $this.mouseup(function() {
        // Prevent further mouseup intervention
        $this.unbind("mouseup");
        return false;
    });
});
$("#serial").focus();
$("#serial").keyup(function (){
   var val = $("#serial").val();
   
   if (val.length === 12){
       $("#form").submit();
   }
});

$.qrCodeReader.jsQRpath = "/lib/qrcode-reader/dist/js/jsQR/jsQR.js";
$.qrCodeReader.beepPath = "/lib/qrcode-reader/dist/audio/beep.mp3";
$("#qr-reader").qrCodeReader({
    multiple: true,
    skipDuplicates: true,
    callback: function(codes) {
        for(var x in codes){
            go(codes[x]);
        }
    }
});

$("#swapActivate").click(function(){
    targetStatus = "active";

    $("#title").text("Activate SIM");
    
    $("#swapActivate").removeClass("active");
    $("#swapDeactivate").removeClass("active");
    
    $("#swapActivate").addClass("active");
    
$("#serial").focus();
});
$("#swapActivate").click();

$("#swapDeactivate").click(function(){
    targetStatus = "inactive";

    $("#title").text("Deactivate SIM");
    
    $("#swapActivate").removeClass("active");
    $("#swapDeactivate").removeClass("active");

    $("#swapDeactivate").addClass("active");
    
$("#serial").focus();
});

$("#form").submit(function(e){
    // Get serial from input and clean it
    var serial = $("#serial").val().trim().toUpperCase();
    
    // If it's blank, do nothing
    if(serial === ""){
        e.preventDefault();
        return;
    }
    
    // Otherwise clean the input and process the serial
    $("#serial").val("");
    go(serial);
    
    e.preventDefault();
});

function go(serial){
    // Add a row with a pending status
    var th = $("<th/>");
    th.text(serial);
    
    var td = $("<td/>");
    td.append($("<span class=\"text-secondary\"><i class=\"spinner-border status-icon\" role=\"status\"></i> Processing...</span>"));
    
    var row = $("<tr/>");
    row.attr("scope", "row");
    row.append(th);
    row.append(td);
    
    $("#output").prepend(row);

    var localTargetStatus = targetStatus;
    fetch('/api/Sim/' + serial,
        {
            method: "PUT",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ // TODO: serialize needed here?
                status: localTargetStatus
            })
        })
        .then(
            function(response) {
                switch(response.status){
                    case 200:
                        td.html("<i class=\"bi bi-check-circle-fill text-success\"></i> Success - SIM now "+localTargetStatus);
                        break;
                    case 202:
                        td.html("<i class=\"bi bi-check-circle-fill text-success\"></i> No change, already "+localTargetStatus);
                        break;
                    case 409:
                        td.html("<i class=\"bi bi-exclamation-circle-fill text-danger\"></i> SIM not found");
                        break;
                    default:
                        td.html("<i class=\"bi bi-exclamation-circle-fill text-danger\"></i> Unexpected response: " + response.status);
                        break;
                }
            }
        )
        .catch(function(error) {
            td.html("<i class=\"bi bi-exclamation-circle-fill text-danger\"></i> " + error);
        });
}

</script>