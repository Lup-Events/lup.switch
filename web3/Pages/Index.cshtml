@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">
        <img src="img/icon.png" width="30" height="30" class="d-inline-block align-top" alt="">
        Switch
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
            <li class="nav-item active">
                <a class="nav-link" href="#" onClick="swapActivate();" id="swapActivate">Activate</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#" onClick="swapDeactivate();" id="swapDeactivate">Deactivate</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/account/signout">Logout</a>
            </li>
        </ul>
    </div>
</nav>


<div class="container">
    <h1 id="title"></h1>
    <form>
        <div class="input-group mb-3">
            <button class="btn btn-outline-secondary" type="button" title="Scan QR with camera" id="qr-reader">
                <i class="bi bi-upc-scan"></i>
            </button>
            <input type="text" class="form-control" placeholder="enter serial" id="serial"><!--DMPW97XBJF8J  F4GWK8RZJC6J -->
            <button class="btn btn-primary" type="submit" id="submit" title="Go!" onClick="onSerialSubmit()">
                <i class="bi bi-play"></i>
            </button>
        </div>
    </form>

    <table class="table">
        <thead>
        <tr>
            <th scope="col" width="50">Serial</th>
            <th scope="col">Status</th>
        </tr>
        </thead>
        <tbody id="output">
        </tbody>
    </table>
</div>

<script>
var serialInput = $("#serial");
var output = $("#output");
let targetStatus="";

swapActivate();

serialInput.focus(function() {
    var $this = $(this);
    $this.select();

    // Work around Chrome's little problem
    $this.mouseup(function() {
        // Prevent further mouseup intervention
        $this.unbind("mouseup");
        return false;
    });
});
serialInput.focus();

$.qrCodeReader.jsQRpath = "/lib/qrcode-reader/dist/js/jsQR/jsQR.js";
$.qrCodeReader.beepPath = "/lib/qrcode-reader/dist/audio/beep.mp3";
$("#qr-reader").qrCodeReader({
    multiple: true,
    skipDuplicates: true,
    callback: function(codes) {
        for(var x in codes){
            add(codes[x]);
        }
    }
});

function swapActivate(){
    targetStatus="active";

    $("#title").text("Activate SIM");
    
    $("#swapActivate").removeClass("active");
    $("#swapDeactivate").removeClass("active");
    
    $("#swapActivate").addClass("active");
}

function swapDeactivate(){
    targetStatus="inactive";

    $("#title").text("Deactivate SIM");
    
    $("#swapActivate").removeClass("active");
    $("#swapDeactivate").removeClass("active");

    $("#swapDeactivate").addClass("active");
}

function onSerialSubmit(){
    var serial = serialInput.val().trim().toUpperCase();
    
    if(serial === ""){
        return;
    }
    serialInput.val("");
    add(serial);
}

function add(serial){
    // Get and clean input
    var serial = serial.trim().toUpperCase();
    
    var th = $("<th/>");
    th.text(serial);
    
    var td = $("<td/>");
    td.append($("<span class=\"text-secondary\"><i class=\"spinner-border status-icon\" role=\"status\"></i> Processing...</span>"));
    
    var row = $("<tr/>");
    row.attr("scope", "row");
    row.append(th);
    row.append(td);
    
    output.prepend(row);

    var localTargetStatus=targetStatus;
    fetch('/api/Sim/' + serial,
        {
            method: "PUT",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ // TODO: serialize needed here?
                status: localTargetStatus
            })
        })
        .then(
            function(response) {
                switch(response.status){
                    case 200:
                        td.html("<i class=\"bi bi-check-circle-fill text-success\"></i> Success - SIM now "+localTargetStatus);
                        break;
                    case 202:
                        td.html("<i class=\"bi bi-check-circle-fill text-success\"></i> No change, already "+localTargetStatus);
                        break;
                    case 409:
                        td.html("<i class=\"bi bi-exclamation-circle-fill text-danger\"></i> SIM not found");
                        break;
                    default:
                        td.html("<i class=\"bi bi-exclamation-circle-fill text-danger\"></i> Unexpected response: " + response.status);
                        break;
                }
            }
        )
        .catch(function(error) {
            td.html("<i class=\"bi bi-exclamation-circle-fill text-danger\"></i> " + error);
        });
}

</script>